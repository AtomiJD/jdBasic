// Tokens.hpp
#pragma once
#include <cstdint>

// We'll put all tokens inside a namespace for organization.
namespace Tokens {
    // Using an enum class provides type safety.
    // The underlying type is set to uint8_t to match your original ubyte.
    enum class ID : uint8_t {
        T_EOF = 0,
        FUNC = 0x01,
        ENDFUNC = 0x02,
        LOCAL = 0x03,
        FOR = 0x04,
        BREAK = 0x05,
        IF = 0x06,
        THEN = 0x07,
        ELSE = 0x08,
        ENDIF = 0x09,
        AND = 0x0A,
        OR = 0x0B,
        NOT = 0x0C,
        MOD = 0x0D,
        JD_TRUE = 0x0E,
        JD_FALSE = 0x0F,
        DO = 0x10,
        WHILE = 0x11,
        LOOP = 0x12,
        UNTIL = 0x13,
        DIM = 0x14,
        AS = 0x15,
        LABEL = 0x16,
        GOTO = 0x17,
        PRINT = 0x18,
        C_CR = 0x19, // Carriage Return
        C_COMMA = 0x1A,
        C_SEMICOLON = 0x1B,
        C_PLUS = 0x1C,
        C_MINUS = 0x1D,
        C_OR = 0x1E,
        C_ASTR = 0x1F,
        C_SLASH = 0x20,
        C_MOD = 0x21,
        C_LEFTPAREN = 0x22,
        C_LEFTBRACKET = 0x23,
        C_RIGHTBRACKET = 0x24,
        C_HASH = 0x25,
        C_RIGHTPAREN = 0x26,
        C_LT = 0x27,
        C_GT = 0x28,
        C_EQ = 0x29,
        C_DOLLAR = 0x2A,
        RETURN = 0x2B,
        NUMBER = 0x2C,
        STRING = 0x2D,
        FAST = 0x2E,
        BYTE = 0x2F,
        INT = 0x30,
        LONG = 0x31,
        FLOAT = 0x32,
        DOUBLE = 0x33,
        ARRAY_ACCESS = 0x34,
        STRVAR = 0x35,
        C_APOSTROPHE = 0x36,
        C_NE = 0x37, // Not Equal <> (use any available code)
        C_LE = 0x38, // Less than or Equal <=
        C_GE = 0x39, // Greater than or Equal >=
        C_COLON = 0x3A,
        CONSTANT = 0x3B,
        MAP = 0x3C,
        BOOL = 0x3D,
        DATE = 0x3E,
        STRTYPE = 0x3F,
        MODULE = 0x40,
        GOFUNC = 0x41,
        F_INC = 0x42,
        TO = 0x43,
        VARIANT = 0x44,
        NEXT = 0x45,
        STEP = 0x46,
        CALLFUNC = 0x47,
        EXPORT = 0x48, // c++20 module
        IMPORT = 0x49, // c++20 module
        JSON = 0x4A,
        TYPE = 0x4B,    
        ENDTYPE = 0x4C, 
        INPUT = 0x4D, 
        STOP = 0x50,    
        RESUME = 0x51, 
        C_LEFTBRACE = 0x52,  
        C_RIGHTBRACE = 0x53, 
        MAP_ACCESS = 0x54,
        ONERRORCALL = 0x55,
        C_DOT = 0x56,
        C_CARET = 0x57,
        EXIT_FOR = 0x58, 
        EXIT_DO = 0x59,
        TENSOR = 0x5A,
        XOR = 0x5B,
        AWAIT = 0x5C,
        ASYNC = 0x5D, 
        OP_START_TASK = 0x5E,
        OP_AWAIT_TASK = 0x5F,
        THREAD = 0x60,
        GET = 0xBA,
        WAIT = 0xD1,
        BLOAD = 0xD2,
        BSAVE = 0xD4,
        FUNCREF = 0xE3,
        REM = 0xE4,
        SUB = 0xE5,
        ENDSUB = 0xE6,
        CALLSUB = 0xE7,
        LIST = 0x70,
        RUN = 0x71,
        EDIT = 0x72,
        DIR = 0x73,
        LOAD = 0x74,
        TRON = 0x76,
        TROFF = 0x77,
        DUMP = 0x78,
        SAVE = 0x79,
        COMPILE = 0x7A,
        WHITE = 0x7D,
        TOKEN = 0x7E,
        NOCMD = 0x7F
    };
}